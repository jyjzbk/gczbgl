🏗️ 项目环境
项目位置：F:\xampp\htdocs\gczbgl
开发环境：PHP 8.2.12, MariaDB 10.4.32, Composer 2.8.6, Node v22.17.0, Git 2.49.0
操作系统：Windows 11
开发工具：VS Code IDE, PowerShell, XAMPP数据库
文档位置：docs文件夹包含完整的开发文档和指导
🚀 开发进度（已更新）
当前版本：v3.0 - 智能实验预约系统版本
完成状态：核心功能100%完成，智能预约系统100%完成
前端规模：Vue 3 + TypeScript + Element Plus，15,000+行代码，30+页面
后端规模：Laravel 12 + MySQL + JWT，8,000+行代码，35+ APIs
数据库：15+张数据表，12种系统角色
已完成模块：
✅ 用户权限管理系统（五级组织架构、角色权限、数据权限控制）
✅ 基础数据管理（学校、学科、实验室、设备分类管理）
✅ 实验目录管理（实验目录CRUD、分层级管理）
✅ 设备管理系统（设备信息、状态跟踪、统计分析、QR码）
✅ 智能实验预约系统（智能预约、课表可视化、设备借用关联、作品管理）
✅ 实验记录系统（实验记录管理、数据统计）
✅ 设备借用管理（借用申请、归还管理、预约关联）
✅ 统计分析系统（基础统计、数据可视化、个人档案）
🎯 下一步开发计划（已确认优先级）
实验教学质量评估系统（最高优先级，3-4周）
高级数据分析与报表系统（高优先级，4-5周）
消息通知与提醒系统（中等优先级，2-3周）
移动端应用开发（中等优先级，4-6周）
设备维护管理增强（较低优先级，2-3周）
🔧 开发偏好
分阶段开发，每阶段充分测试后再进行下一阶段
参考docs文件夹中的详细开发文档进行开发
前端使用Vue 3 + TypeScript + Element Plus + Pinia + Vue Router
后端遵循Laravel Service层设计模式
基于五级组织架构的权限控制系统
偏好层级化显示而非简单分页
完成重要阶段后更新文档并清理临时文件
🏢 组织架构与权限控制
五级组织结构：省→市→区县→学区→学校
数据权限控制：每级只能管理和查看本级及下级数据
示例结构：河北省教育系统完整层级结构
权限递归：高级组织自动拥有下级组织的管理权限
📚 重要文档参考
 docs/PROJECT_STATUS.md - 项目当前状态
 docs/NEXT_DEVELOPMENT_PLAN.md - 下一步开发计划
 docs/06-智能实验预约系统技术文档.md - 最新功能技术文档
 docs/01-系统总体设计方案.md - 系统架构设计
 docs/02-数据库设计方案.md - 数据库结构设计
🧪 测试账号
所有测试账号密码均为：password

province_admin_test - 省级管理员
city_admin_test - 市级管理员
county_admin_test - 区县管理员
school_admin_test - 学校管理员
school_teacher - 实验教师